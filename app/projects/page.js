export default function Projects() {
  return (
    <div className="slim-container">
      <section className="pageChunk">
        <section className="hero">
          <div className="hero-body">
            <p className="title has-text-success is-size-2">Projects</p>
            <p className="subtitle">
              A collection of past and current projects that I find interesting
            </p>
          </div>
        </section>
      </section>
      {/* TODO make a class for projects? */}
      <section className="pageChunk">
        <h1 className="title has-text-success is-size-5">Fractal Voyager</h1>
        <h2 className="subtitle is-size-6 project-subtitle">
          CS Honors Thesis, advised by Kevin Angstadt
        </h2>
        <p className="inner-page-chunk">
          Fractal Voyager is a fractal generating web application to assist in{" "}
          <a
            href="https://en.wikipedia.org/wiki/Complex_dynamics"
            target="_blank"
          >
            complex dynamics
          </a>{" "}
          research. It includes a simple scripting langauge based on{" "}
          <a
            href="https://pi.math.cornell.edu/~noonan/fstream.html"
            target="_blank"
          >
            Fractal Stream
          </a>
          . This langauge, in conjuction with app features, enables users to
          generate and explore fractals based on inputted scripts representing
          iterative functions and conditions.
        </p>
        <p className="inner-page-chunk">
          Fractal Voyager provides an innovative application of{" "}
          <a href="https://webassembly.org/" target="_blank">
            WebAssembly
          </a>
          . A source-to-source compiler translates custom scripts to C++, which
          can generate an array representation of the complex plane with color
          values. This compiler is compiled to WebAssembly allowing scripts to
          be enetered and compiled on the web. Then, the C++ that was generated
          is compiled to WebAssembly. This step is particularly tricky, and uses
          the core functionality of an{" "}
          <a href="https://github.com/jprendes/emception" target="_blank">
            in-broswer C++ code editor
          </a>
          . Finally, the WebAssembly is run on the web to generate fractals.
        </p>
        <p className="inner-page-chunk">
          The language and application supports paramter and dynamical plane
          fractals, along with point orbit visualizations. The parameter plane
          is the complex plane when a function is iterated until a condition is
          met with respect to a fixed point. For example, z = z^2+c. It includes
          the paramter, c*, which changes with respect to the passed in point
          across the complex plane.{"\n\n"}The dynamical plane is the complex
          plane when a function is iterated until a condition is met with
          respect to a variable point, z, that changes with respect to the
          passed in point across the complex plane. For example, z = z^2 − 0.79
          + 0.15i. A complex number’s orbit for a particular dynamical system is
          the value of the number after each iteration of the function.{"\n"}
        </p>
        <p className="inner-page-chunk">
          The compiled WebAssembly is paramterized, allowing users to explore a
          function without needed to recompile. A key feature of this is
          switching between the paramter plane and dynamical plane by selected a
          point to fix the c value. One can also select a point in the dynamical
          plane to see it&apos;s orbit, all done without needing to write a new
          script. A dynamical plane fractal can also be generated by writing a
          script without a c value. {"\n"}
          The fractal images can be altered by changing the breakpoints of the
          funciton conditions. For example, one condition that can be put on a
          funciton is &quot;until z stops&quot;, which means consider a point in
          the fractal set if z never converges. For this condition, one can
          alter the epsilon value: the difference between the current value of z
          versus the last value of z to say the function converged.
        </p>
        <a href="files/fv/poster.pdf" target="_blank" rel="noopener noreferrer">
          See the poster
        </a>
        <a href="files/fv/paper.pdf" target="_blank" rel="noopener noreferrer">
          See the paper
        </a>
        <a href="https://fractalvoyager.github.io/" target="_blank">
          Website
        </a>
      </section>
    </div>
  );
}
